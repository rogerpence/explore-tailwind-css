#!/usr/bin/env bash

# function dev() {
#     if [ -e dev ]
#     then
#         ./dev "$@"
#     else
#         echo "There isn't a 'dev' file here."
#     fi
# }

if [ $# -gt 0 ]; then

    if [ "$1" == "start" ]|| [ "$1" == "up" ]; then
        docker-compose up -d

    elif [ "$1" == "stop" ] || [ "$1" == "down" ]; then
        docker-compose down

    elif [ "$1" == "bash" ]; then
        shift 1
        docker-compose exec -u www-data:www-data -w /var/www/html \
            app \
            bash

    elif [ "$1" == "bash-root" ]; then
        shift 1
        docker-compose exec -w /var/www/html \
            app \
            bash

    elif [ "$1" == "gulp" ]; then
        shift 1
        docker-compose exec -w /var/project \
            app \
            bash

    elif [ "$1" == "compile-tw" ]; then
        shift 1
        docker-compose exec  -w /var/www/html \
            app node --version
            #app /var/www/html/buildtw.sh

    elif [ "$1" == "bash-db" ]; then
        shift 1
        docker-compose exec db bash

    elif [ "$1" == "remove-all-containers" ]; then
        docker rm $(docker ps -a -q)

    elif [ "$1" == "build-app" ]; then
        docker build \
           --build-arg USER_ID=$(id -u ${USER}) \
           --build-arg GROUP_ID=$(id -g ${USER}) \
           -t rp/tailwind:latest -f ./app-dockerfile .

    elif [ "$1" == "npm" ]; then
        shift 1
        docker-compose run --rm \
            app \
            npm "$@"

    elif [ "$1" == "yarn" ]; then
        shift 1
        docker-compose run --rm \
            node \
            yarn "$@"

    elif [ "$1" == "gulp" ]; then
        shift 1
        docker-compose run --rm \
            node \
            ./node_modules/.bin/gulp "$@"

    elif [ "$1" == "ps" ]; then
        docker-compose ps

    else
        docker-compose "$@"

    fi

else
    echo "--------------"
    echo "dev shortcuts:"
    echo "--------------"
    echo "dev start | up       Start containers"
    echo "dev stop | down      Stop containers "
    echo "artisan...           Start Laravel artisan with args"
    echo "composer...          Run composer with args"
    echo "bash                 Start Bash as www-data"
    echo "bash-root            Start Bash as root"
    echo "tinker               Start Laravel tinker"
    echo "test...              Run PHPUnit with args"
    echo "laravel-version      Show Laravel version"
    echo "ps                   Show running containers"
fi
